// schema.prisma untuk SI Surat Kelurahan Liliba

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  WARGA
  RT
  STAFF
  LURAH
  SUPERADMIN
}

enum JenisKelamin {
  LAKI_LAKI
  PEREMPUAN
}

enum StatusHidup {
  HIDUP
  MENINGGAL
}

enum StatusSurat {
  DIAJUKAN
  DIVERIFIKASI_STAFF
  DITOLAK_STAFF
  DIVERIFIKASI_RT
  DITOLAK_RT
  DIVERIFIKASI_LURAH
  DITOLAK_LURAH
  DITERBITKAN
}

enum PeranKeluarga {
  KEPALA_KELUARGA
  ISTRI
  ANAK
  ORANG_TUA
  FAMILI_LAINNYA
}

model User {
  id             String  @id @default(uuid())
  username       String  @unique
  email          String? @unique
  password       String
  role           Role    @default(WARGA)
  numberWhatsApp String? @unique

  rememberToken     String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  extraRoles        Role[]
  profil            Warga?
  suratDiajukan     Surat[]    @relation("PemohonSurat")
  suratSebagaiStaff Surat[]    @relation("StaffVerifikasi")
  suratSebagaiLurah Surat[]    @relation("LurahVerifikasi")
  RTProfile         RTProfile?
  suratSebagaiRT    Surat[]    @relation("RTVerifikasi")

  Surat Surat[]
  // UserRole UserRole[]
}

model RTProfile {
  id      String  @id @default(uuid())
  userId  String  @unique
  nik     String  @unique
  user    User    @relation(fields: [userId], references: [id])
  rt      String
  rw      String?
  wilayah String? // Optional untuk deskripsi area RT
}

model Warga {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  namaLengkap  String
  nik          String       @unique
  tempatLahir  String?
  tanggalLahir DateTime?
  jenisKelamin JenisKelamin
  pekerjaan    String?
  agama        String?
  noTelepon    String?
  rt           String?
  rw           String?
  alamat       String?
  foto         String?
  statusHidup  StatusHidup? @default(HIDUP)

  fileKtp String?
  fileKk  String?

  kartuKeluargaId String?
  kartuKeluarga   KartuKeluarga? @relation("AnggotaKK", fields: [kartuKeluargaId], references: [id])

  peranDalamKK PeranKeluarga?
  kepalaDariKK KartuKeluarga? @relation("KepalaKeluarga")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model KartuKeluarga {
  id               String @id @default(uuid())
  nomorKK          String @unique
  kepalaKeluargaId String @unique
  kepalaKeluarga   Warga  @relation("KepalaKeluarga", fields: [kepalaKeluargaId], references: [id])

  alamat String
  rt     String?
  rw     String?

  anggota   Warga[]  @relation("AnggotaKK")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Surat {
  id           String     @id @default(uuid())
  idJenisSurat String
  jenis        JenisSurat @relation(fields: [idJenisSurat], references: [id])

  idPemohon String
  pemohon   User   @relation("PemohonSurat", fields: [idPemohon], references: [id])

  namaLengkap        String
  nik                String
  jenisKelamin       JenisKelamin
  tempatTanggalLahir String
  agama              String?
  pekerjaan          String?
  alamat             String?
  noTelepon          String?

  alasanPengajuan String?
  dataSurat       Json? // ‚Üê Data khusus sesuai jenis surat (fleksibel, bisa berisi upload/file/link juga)

  status           StatusSurat @default(DIAJUKAN)
  tanggalPengajuan DateTime?   @default(now())

  // RT
  idRT                String?
  rt                  User?     @relation("RTVerifikasi", fields: [idRT], references: [id])
  tanggalVerifikasiRT DateTime?
  catatanPenolakanRT  String?

  // Staff
  idStaff                String?
  staff                  User?     @relation("StaffVerifikasi", fields: [idStaff], references: [id])
  tanggalVerifikasiStaff DateTime?
  catatanPenolakan       String?

  // Lurah
  idLurah                String?
  lurah                  User?     @relation("LurahVerifikasi", fields: [idLurah], references: [id])
  tanggalVerifikasiLurah DateTime?

  // File Umum
  fileKtp            String?
  fileKk             String?
  noSuratPengantar   String?
  fileSuratPengantar String?
  fileSuratTerbit    String?

  // Optional
  noSurat String? @unique
  userId  String?
  User    User?   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JenisSurat {
  id        String  @id @default(uuid())
  kode      String  @unique
  nama      String
  deskripsi String?
  aktif     Boolean @default(true)
  surat     Surat[]
}

// model DetailSuratUsaha {
//   id          String  @id @default(uuid())
//   suratId     String  @unique
//   surat       Surat   @relation(fields: [suratId], references: [id])
//   jenisUsaha  String
//   namaUsaha   String
//   alamatUsaha String
//   fotoUsaha   String?
// }

// model DetailSuratKematian {
//   id                String   @id @default(uuid())
//   suratId           String   @unique
//   surat             Surat    @relation(fields: [suratId], references: [id])
//   namaAyah          String
//   namaIbu           String
//   tanggalKematian   DateTime
//   tempatKematian    String
//   sebabKematian     String
//   fileSuratKematian String?
// }

// model DetailSuratAhliWaris {
//   id                     String   @id @default(uuid())
//   suratId                String   @unique
//   surat                  Surat    @relation(fields: [suratId], references: [id])
//   namaAlmarhum           String
//   tanggalMeninggal       DateTime
//   alamatTerakhir         String
//   hubunganDenganAlmarhum String
//   dataAhliWaris          Json?
//   dataIstri              Json?
//   dataAnak               Json?
//   dataSaksi              Json?
//   fileAktaKematian       String?
//   fileKtpAhliWaris       Json?
//   fileAktaLahirAhliWaris Json?
//   fileKtpSaksi           Json?
// }

// model DetailSuratOrangTua {
//   id      String @id @default(uuid())
//   suratId String @unique
//   surat   Surat  @relation(fields: [suratId], references: [id])

//   namaAyah   String?
//   namaIbu    String?
//   alamatOrtu String?

//   dataTambahan Json? // bisa menampung data fleksibel seperti pekerjaan, nik, umur, dll
// }

model Setting {
  id        String   @id @default("global") // singleton row
  key       String   @unique
  value     String
  updatedAt DateTime @updatedAt
}
